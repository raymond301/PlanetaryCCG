<!DOCTYPE html>
<html>
  <head>
    <title><%- title %></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

      <script src="/linker/js/jquery-1.10.2.min.js"></script>

      <!--
          Stylesheets and Preprocessors
          ==============================

          You can always bring in CSS files manually with `link` tags, or asynchronously
          on the client using a solution like AMD (RequireJS).  Or, if you like, you can
          take advantage of Sails' boilerplate asset management.

          By default, stylesheets from your `assets/linker/styles` folder are included
          here automatically.  Both CSS (.css) and LESS (.less) are supported.
          In production, your styles will be minified and concatenated into a single file.

          To customize any part of the built-in behavior, just edit your Gruntfile.
          For example, here are a few things you could do:

              + Change the order of your CSS files
              + Import stylesheets from other directories
              + Use a different or additional preprocessor, like SASS, SCSS or Stylus
      -->

    <!--STYLES-->
    <link rel="stylesheet" href="/linker/styles/bootstrap-theme.css">
    <link rel="stylesheet" href="/linker/styles/bootstrap.css">
    <link rel="stylesheet" href="/linker/styles/colorpicker.css">
    <!--STYLES END-->


  </head>

  <body>


  <!-- Fixed navbar -->
  <div class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".nav-collapse">
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/"><span class="glyphicon glyphicon-road"></span>&nbsp;Planetary Game</a>

          <ul class="nav navbar-nav pull-right">


              <!--li class="active"><a href="#">Home</a></li-->

              <!-- % if (typeof user !== 'undefined') {% -->
              <% if (session.User) {%>
                  <li><a href="#">Start a Game</a></li>

                  <li class="dropdown">
                      <a href="#" class="dropdown-toggle" data-toggle="dropdown">Profile<b class="caret"></b></a>
                      <ul class="dropdown-menu">
                          <li><a href="#">Decks</a></li>

                          <li class="divider"></li>
                          <li><a href="/user/show/<%=session.User.id%>"><%=session.User.username%></a></li>
                          <li><a href="/session/destroy">Logout</a></li>
                          <!--li class="dropdown-header">Header</li-->

                      </ul>
                  </li>
                  <li><a href="#"><i class="glyphicon glyphicon-user"></i></a></li>

              <%}%>

          </ul>
      </div>
  </div>


  </br></br></br>


    <%- body %>



    <!--
        Client-side Templates
        ========================

    		HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically.
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your templates using a server-side stringfile
              before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' boilerplate asset management.

      By default, filesin your `assets/linker/js` folder are included here
      automatically.  Both JavaScript (.js) and CoffeeScript (.coffee) are supported.
      In production, your scripts will be minified and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/linker/js/socket.io.js"></script>
    <script src="/linker/js/sails.io.js"></script>
    <script src="/linker/js/app.js"></script>
    <script src="/linker/js/bootstrap.min.js"></script>
    <script src="/linker/js/colorpicker.min.js"></script>
    <script src="/linker/js/html5shiv.js"></script>
    <script src="/linker/js/jquery-1.10.2.min.js"></script>
    <script src="/linker/js/kinetic-v5.0.0.js"></script>
    <!--SCRIPTS END-->



    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
        <script src="js/html5shiv.js"></script>
    <![endif]-->

  </body>
</html>